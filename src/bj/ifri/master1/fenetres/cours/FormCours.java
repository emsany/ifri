/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bj.ifri.master1.fenetres.cours;

import bj.ifri.master1.emploi.modele.Classe;
import bj.ifri.master1.emploi.modele.Cours;
import bj.ifri.master1.emploi.modele.Dao;
import bj.ifri.master1.emploi.modele.Enseignant;
import bj.ifri.master1.emploi.modele.Matiere;
import bj.ifri.master1.fenetres.matiere.FormMatiere;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author imandine
 */
public class FormCours extends javax.swing.JFrame  {
    
    private String mode /*modification , creation*/ ;
    private static Cours courant;

    /**
     * Creates new form parametres
     */
    public FormCours() {
        initComponents();
    }

    public FormCours(String mode) {
        this.mode = mode;
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        initComponents();
        remplirComboClasse();
        remplirComboMatiere();
        remplirComboEnseignant();
    }
    
    public FormCours(String mode, Cours cours) {
        
        this.courant = cours;
        this.mode = mode;
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);

        
        initComponents();
         if("modification".equals(mode)){

        }
    }

    
    private void remplirComboEnseignant(){
         DefaultComboBoxModel model = new DefaultComboBoxModel<>();
        Statement st = null;
        ResultSet rs = null;
        try {
            Dao.Connect();
            Connection connection = Dao.getConnection();
            String query = "SELECT * FROM \"ENSEIGNANT\"";
            st = connection.createStatement();
            rs = st.executeQuery(query);
            while( rs.next()){
                model.addElement(new Enseignant(rs.getString("code"), rs.getString("nom"), rs.getString("prenom")));
            }
            codeEnseignant.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(FormMatiere.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            try{
            rs.close();
            st.close();
            }catch(Exception e){
            }
        }        
    }
    private void remplirComboClasse(){
                 DefaultComboBoxModel model = new DefaultComboBoxModel<>();
        Statement st = null;
        ResultSet rs = null;
        try {
            Dao.Connect();
            Connection connection = Dao.getConnection();
            String query = "SELECT * FROM \"CLASSE\"";
            st = connection.createStatement();
            rs = st.executeQuery(query);
            while( rs.next()){
                model.addElement(new Classe(rs.getString("code"), rs.getString("nom")));
            }
            codeClasse.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(FormMatiere.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            try{
            rs.close();
            st.close();
            }catch(Exception e){
            }
        }
    }
    private void remplirComboMatiere(){
                 DefaultComboBoxModel model = new DefaultComboBoxModel<>();
        Statement st = null;
        ResultSet rs = null;
        try {
            Dao.Connect();
            Connection connection = Dao.getConnection();
            String query = "SELECT * FROM \"MATIERE\"";
            st = connection.createStatement();
            rs = st.executeQuery(query);
            while( rs.next()){
                model.addElement(new Matiere(rs.getString("code"), rs.getString("libelle")));
            }
            codeMatiere.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(FormMatiere.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            try{
            rs.close();
            st.close();
            }catch(Exception e){
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
 regenerated by the FormCours Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        codeClasse = new javax.swing.JComboBox<>();
        codeMatiere = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        objectif = new javax.swing.JTextArea();
        codeEnseignant = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Classe :");

        jLabel2.setText("Matiere");

        jButton3.setText("Enregistrer");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Fermer");

        jButton5.setText("Modifier");

        jLabel3.setFont(new java.awt.Font("Daniel Black", 3, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Enregistrement des cours");

        objectif.setColumns(20);
        objectif.setRows(5);
        jScrollPane2.setViewportView(objectif);

        jLabel4.setText("Enseignant");

        jLabel5.setText("Objectifs ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(codeEnseignant, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(codeMatiere, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(codeClasse, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(52, 52, 52)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(codeClasse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(codeMatiere, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addGap(13, 13, 13)
                        .addComponent(jButton4)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codeEnseignant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        switch(mode){
            case "creation" : 
                try {
                    // TODO add your handling code here:
                    Dao.Connect();
                    Connection connection = Dao.getConnection();

                    String query = "INSERT INTO \"COURS\" VALUES(?,?,?,?)";
                    PreparedStatement pst = connection.prepareStatement(query);
                    pst.setString(1, codeClasse.getSelectedItem().toString().split(":")[0]);
                    pst.setString(2, codeEnseignant.getSelectedItem().toString().split("-")[0]);
                    pst.setString(3, codeMatiere.getSelectedItem().toString().split(":")[0]);
                    pst.setString(4, objectif.getText());
                    
                    pst.setString(4, codeClasse.getSelectedItem().toString().split(":")[1]);
                    pst.setString(4, codeEnseignant.getSelectedItem().toString().split("-")[1]);
                    pst.setString(4, codeMatiere.getSelectedItem().toString().split(":")[1]);
                    
                    int result = pst.executeUpdate();
                } catch (SQLException ex) {
                    Logger.getLogger(FormCours.class.getName()).log(Level.SEVERE, null, ex);
                }   
                break;
            case "modification": 
                if(true) return;
                try {
                Dao.Connect();
                Connection connection = Dao.getConnection();
                    String query = "UPDATE \"FILIERE\" SET LIBELLE = ? WHERE CODE = ?";
                    PreparedStatement pst = connection.prepareStatement(query);
                    int result = pst.executeUpdate();
                } catch (SQLException ex) {
                    Logger.getLogger(FormCours.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
        }
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormCours.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormCours.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormCours.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormCours.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormCours().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> codeClasse;
    private javax.swing.JComboBox<String> codeEnseignant;
    private javax.swing.JComboBox<String> codeMatiere;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea objectif;
    // End of variables declaration//GEN-END:variables
}
